{
  "version": 3,
  "sources": ["../src/constants.js", "../src/core/Layer.js", "../src/utils/toSVG.js", "../src/core/Draw.js", "../src/objects/Point.js", "../src/objects/Shape.js", "../src/objects/Rectangle.js"],
  "sourcesContent": ["export const RECT_TYPE = `rect`;\nexport const LAYER_TYPE = `layer`;\nexport const NAMESPACE = `http://www.w3.org/2000/svg`\n", "import {LAYER_TYPE} from \"../constants\";\n\nexport class Layer {\n    constructor(name = '') {\n        this._name = ''\n        this._type = LAYER_TYPE\n        this._uuid = Math.random() * 100000\n        this._children = []\n        this._active = false\n    }\n\n    set name(name) {\n        this._name = name\n    }\n    get name() {\n        return this._name\n    }\n    set active(active) {\n        this._active = active\n    }\n\n    get active() {\n        return this._active\n    }\n\n    get uuid() {\n        return this._uuid\n    }\n\n    addChildren(children) {\n        this._children.push(children)\n    }\n\n    get children() {\n        return this._children\n    }\n\n    childrenToObject() {\n        return this._children.map(item => item.toObject())\n    }\n\n    toObject() {\n        return {\n            type: this._type,\n            uuid: this._uuid,\n            name: this._name,\n            children: this.childrenToObject()\n        }\n    }\n}\n", "import {NAMESPACE} from \"../constants\";\n\n\nexport const createElement = (type) => {\n    return document.createElementNS(null, type);\n};\n\nexport const setAttributes = (element, attributes) => {\n    Object.keys(attributes).map((key) => {\n        let value = attributes[key];\n        element.setAttributeNS(null, key, value);\n    });\n    return element\n}\n\n\nexport const nodesToSVG = children => {\n    return children\n        .map(node => setAttributes(createElement(node.type), {...node.attributes, id: node.uuid}).outerHTML)\n        .join(\"\")\n}\n\nexport const layerToGroup = layers => {\n    return layers.map((layer) => {\n        const children = nodesToSVG(layer.children)\n        const g = setAttributes(createElement('g'), {id: layer.uuid})\n        g.innerHTML = children\n        return g.outerHTML\n    }).join(\"\")\n}\n\nexport const objectToSVG = viewObject => {\n    const svg = document.createElementNS(NAMESPACE, \"svg\");\n    svg.setAttributeNS(NAMESPACE, \"ns:xmlns\", NAMESPACE);\n    svg.setAttribute(\"style\", `height:100%;width:100%`);\n    svg.innerHTML = layerToGroup(viewObject);\n    return svg.outerHTML\n}\n\nexport const toSVGView = (viewObject) => {\n    return objectToSVG(viewObject)\n}\n", "import {Layer} from \"./Layer\";\nimport {toSVGView} from \"../utils/toSVG\";\n\nexport class Draw {\n    constructor(rootElm) {\n        this._state = {}\n        this._layers = {}\n        this._activeLayer = null\n        this._rootElm = rootElm\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    set state(data) {\n        this._state = data\n    }\n\n    get layers() {\n        return Object.keys(this._layers).map(k => this._layers[k])\n    }\n\n    get activeLayer() {\n        return this._layers[this._activeLayer]\n    }\n\n    set activeLayer(layer) {\n        this._activeLayer = layer.uuid\n    }\n\n    addLayer(layer = new Layer()) {\n        this._layers[layer.uuid] = layer;\n        this._activeLayer = layer.uuid\n    }\n\n    draw(shape) {\n        shape.onViewUpdate((shape) => {\n            this.updateView();\n        })\n\n        this.activeLayer.addChildren(shape)\n        this.updateView()\n    }\n\n    updateView() {\n        this.makeView()\n        if (this._rootElm) {\n            this.renderDom()\n        } else {\n            new Error(\"Root element not found\")\n        }\n    }\n\n    makeView() {\n        this._viewObject = this.layers.map(i => i.toObject())\n    }\n\n    renderDom() {\n        this._svg = toSVGView(this._viewObject)\n        this._rootElm.innerHTML = this._svg\n    }\n\n    setup() {\n        this.addLayer(new Layer('layer 1'))\n    }\n}\n", "export class Point {\n    constructor(x, y) {\n        this._attributes = {\n            x: x,\n            y: y\n        }\n    }\n\n    set x(x) {\n        this._attributes.x = x;\n    }\n    set y(y) {\n        this._attributes.y = y;\n    }\n    get x() {\n        return this._attributes.x\n    }\n    get y() {\n        return this._attributes.y\n    }\n}\n\n", "import {Point} from \"./Point\";\n\nexport class Shape extends Point {\n    constructor(x = 0, y = 0) {\n        super(x, y);\n        this._uuid = Math.random() * 10000000;\n        this._attributes = this.attributes || {}\n        return new Proxy(this, {\n            set: (target, key, value) => {\n                target[key] = value\n                if(target._updateView) target._updateView(target)\n                return true\n            }\n        })\n    }\n\n    get attributes() {\n        return this._attributes\n    }\n\n    set attributes(attributesObject) {\n        this._attributes = {\n            ...this._attributes,\n            ...attributesObject\n        }\n\n    }\n\n    set fill(color) {\n        this._attributes.fill = color\n\n    }\n\n    set stroke(color) {\n        this._attributes.stroke = color\n\n    }\n\n    set strokeWidth(width) {\n        this._attributes.strokeWidth = width\n\n    }\n\n    set transform(properties) {\n        this._attributes.transform = properties\n    }\n\n    get uuid() {\n        return this._uuid\n    }\n\n\n    onViewUpdate(f) {\n        this._updateView = f\n    }\n}\n\n\n", "import {Shape} from \"./Shape\";\nimport { RECT_TYPE } from \"../constants\";\n\nexport class Rectangle extends Shape {\n    constructor(x, y, height, width) {\n        super(x, y);\n        this._type = RECT_TYPE;\n        this._attributes = this._attributes || {};\n        this._attributes.height = height;\n        this._attributes.width = width\n    }\n\n    set height(height) {\n        this._attributes._height = height\n\n    }\n\n    set width(width) {\n        this._attributes._width = width\n    }\n\n    get height() {\n        return this._attributes._height\n\n    }\n    get width() {\n        return this._attributes._width\n    }\n\n    toObject() {\n        return {\n            type: this._type,\n            uuid: this.uuid,\n            attributes: this.attributes\n        }\n    }\n\n    clone() {\n       return  new Rectangle(this._attributes.x, this._attributes.y, this._attributes.height, this._attributes.width)\n    }\n\n}\n"],
  "mappings": "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",
  "names": []
}
